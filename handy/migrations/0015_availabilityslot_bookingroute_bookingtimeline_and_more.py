# Generated by Django 4.2.23 on 2025-10-16 15:06

from decimal import Decimal
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('handy', '0014_remove_handymanprofile_deposit_balance'),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailabilitySlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.PositiveSmallIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='BookingRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polyline', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=4326)),
                ('eta_minutes', models.PositiveIntegerField(default=timezone.now)),
                ('source', models.CharField(default='device', max_length=50)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmé'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], max_length=20)),
                ('at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CancellationPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('free_until_minutes', models.PositiveIntegerField(default=60)),
                ('fee_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('percent_off', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('amount_off', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('ts', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='PayoutAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('bank', 'Bank'), ('om', 'OrangeMoney'), ('mtn', 'MTN')], max_length=30)),
                ('account_ref', models.CharField(max_length=120)),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_percent', models.DecimalField(decimal_places=2, default=Decimal('11.00'), max_digits=5)),
                ('fee_min_xof', models.PositiveIntegerField(default=500)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReplacementSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='review_images/')),
            ],
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.CharField(blank=True, max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('radius_km', models.FloatField(default=10)),
                ('polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='TimeOff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='user',
            options={},
        ),
        migrations.RenameField(
            model_name='notification',
            old_name='related_id',
            new_name='object_id',
        ),
        migrations.AddField(
            model_name='booking',
            name='job_location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='booking',
            name='requested_end',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='requested_start',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='total_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='handymanprofile',
            name='location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='handymanprofile',
            name='online',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='payment',
            name='currency',
            field=models.CharField(default='XOF', max_length=8),
        ),
        migrations.AddField(
            model_name='service',
            name='banner',
            field=models.ImageField(default=timezone.now, upload_to='service_images/'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='last_location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='user',
            name='last_location_ts',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='handyman_comment',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='proposed_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='response_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='status',
            field=models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmé'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], db_index=True, default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='deposittransaction',
            name='date',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='deposittransaction',
            name='reference',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='deposittransaction',
            name='status',
            field=models.CharField(choices=[('completed', 'Complété'), ('pending', 'En attente'), ('failed', 'Échoué')], db_index=True, default='completed', max_length=20),
        ),
        migrations.AlterField(
            model_name='deposittransaction',
            name='type',
            field=models.CharField(choices=[('deposit', 'Dépôt'), ('withdrawal', 'Retrait'), ('deduction', 'Déduction mission')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='handymanprofile',
            name='availability',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='handymanprofile',
            name='is_approved',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='handymanprofile',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='handymen', to='handy.servicecategory'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('profile_incomplete', 'Profil incomplet'), ('profile_completed', 'Profil complété'), ('booking_request', 'Demande de réservation'), ('booking_confirmed', 'Réservation confirmée'), ('booking_cancelled', 'Réservation annulée'), ('payment_received', 'Paiement reçu'), ('review_received', 'Avis reçu'), ('message_received', 'Message reçu'), ('booking_status', 'Changement de statut de réservation')], db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='payment',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='payment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='payment',
            name='is_paid',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='payment',
            name='method',
            field=models.CharField(choices=[('card', 'Carte'), ('transfer', 'Virement'), ('cash', 'Espèces'), ('check', 'Chèque')], max_length=20),
        ),
        migrations.AlterField(
            model_name='payment',
            name='platform_fee',
            field=models.DecimalField(decimal_places=2, help_text='Montant frais plateforme', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='payment',
            name='status',
            field=models.CharField(choices=[('pending', 'En attente'), ('completed', 'Complété'), ('failed', 'Échoué'), ('refunded', 'Remboursé')], db_index=True, default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='payment',
            name='transaction_id',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='paymentlog',
            name='changed_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='payout',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)]),
        ),
        migrations.AlterField(
            model_name='payout',
            name='requested_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='payout',
            name='status',
            field=models.CharField(choices=[('pending', 'En attente'), ('sent', 'Envoyé'), ('failed', 'Échoué')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='quotation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='quotation',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='quotation',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='quotation',
            name='status',
            field=models.CharField(choices=[('pending', 'En attente'), ('accepted', 'Accepté'), ('rejected', 'Refusé'), ('expired', 'Expiré')], db_index=True, default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='quotation',
            name='valid_until',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='title',
            field=models.CharField(db_index=True, max_length=200),
        ),
        migrations.AlterField(
            model_name='servicecategory',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to...', related_name='handy_user_groups', related_query_name='handy_user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_verified',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, db_index=True, max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(blank=True, choices=[('client', 'Client'), ('employeur', 'Employeur'), ('handyman', 'Artisan'), ('admin', 'Administrateur')], default='client', max_length=20, null=True),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status', 'booking_date'], name='handy_booki_status_e95cad_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['client', 'created_at'], name='handy_booki_client__226679_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['handyman', 'created_at'], name='handy_booki_handyma_5d7df5_idx'),
        ),
        migrations.AddIndex(
            model_name='deposittransaction',
            index=models.Index(fields=['handyman', 'status', '-date'], name='handy_depos_handyma_4d3de1_idx'),
        ),
        migrations.AddIndex(
            model_name='handymanprofile',
            index=models.Index(fields=['is_approved', 'rating'], name='handy_handy_is_appr_602233_idx'),
        ),
        migrations.AddIndex(
            model_name='handymanprofile',
            index=models.Index(fields=['completed_jobs'], name='handy_handy_complet_fdf58b_idx'),
        ),
        migrations.AddIndex(
            model_name='handymanprofile',
            index=django.contrib.postgres.indexes.GistIndex(fields=['location'], name='handy_handy_locatio_59686e_gist'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='handy_payme_status_718a3f_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['handyman', 'is_active'], name='handy_servi_handyma_d17951_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['category', 'is_active'], name='handy_servi_categor_13f379_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='handy_user_email_398f96_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified'], name='handy_user_is_veri_6384cb_idx'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(check=models.Q(('end_date__gte', models.F('booking_date')), ('end_date__isnull', True), _connector='OR'), name='bk_end_after_start'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(check=models.Q(('client', models.F('handyman')), _negated=True), name='bk_client_not_handyman'),
        ),
        migrations.AddConstraint(
            model_name='deposittransaction',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('amount__gt', 0), ('type', 'deposit')), models.Q(('type', 'deposit'), _negated=True), _connector='OR'), name='dt_deposit_gt0'),
        ),
        migrations.AddConstraint(
            model_name='deposittransaction',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('amount__lt', 0), ('type__in', ['withdrawal', 'deduction'])), models.Q(('type__in', ['withdrawal', 'deduction']), _negated=True), _connector='OR'), name='dt_withdrawal_neg'),
        ),
        migrations.AddConstraint(
            model_name='handymanprofile',
            constraint=models.CheckConstraint(check=models.Q(('hourly_rate__gte', 0)), name='hm_hourly_rate_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='handymanprofile',
            constraint=models.CheckConstraint(check=models.Q(('daily_rate__gte', 0)), name='hm_daily_rate_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='handymanprofile',
            constraint=models.CheckConstraint(check=models.Q(('monthly_rate__gte', 0)), name='hm_monthly_rate_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='handymanprofile',
            constraint=models.CheckConstraint(check=models.Q(('travel_fee__gte', 0)), name='hm_travel_fee_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('price__isnull', True), ('price_type', 'quote')), models.Q(('price__gte', 0), ('price_type__in', ['hourly', 'fixed'])), _connector='OR'), name='svc_price_logic'),
        ),
        migrations.AddConstraint(
            model_name='servicecategory',
            constraint=models.UniqueConstraint(fields=('parent', 'name'), name='uniq_category_per_parent'),
        ),
        migrations.AddField(
            model_name='timeoff',
            name='handyman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_off', to='handy.handymanprofile'),
        ),
        migrations.AddField(
            model_name='servicearea',
            name='handyman',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_area', to='handy.handymanprofile'),
        ),
        migrations.AddField(
            model_name='searchlog',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='handy.servicecategory'),
        ),
        migrations.AddField(
            model_name='searchlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewmedia',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='handy.review'),
        ),
        migrations.AddField(
            model_name='replacementsuggestion',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replacement_suggestions', to='handy.booking'),
        ),
        migrations.AddField(
            model_name='replacementsuggestion',
            name='original_service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='handy.service'),
        ),
        migrations.AddField(
            model_name='replacementsuggestion',
            name='suggested_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='handy.service'),
        ),
        migrations.AddField(
            model_name='pricingrule',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='handy.servicecategory'),
        ),
        migrations.AddField(
            model_name='payoutaccount',
            name='handyman',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payout_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='jobtracking',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_points', to='handy.booking'),
        ),
        migrations.AddField(
            model_name='jobtracking',
            name='handyman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='booking',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='handy.booking'),
        ),
        migrations.AddField(
            model_name='bookingtimeline',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='handy.booking'),
        ),
        migrations.AddField(
            model_name='bookingroute',
            name='booking',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='route', to='handy.booking'),
        ),
        migrations.AddField(
            model_name='availabilityslot',
            name='handyman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='handy.handymanprofile'),
        ),
        migrations.AddIndex(
            model_name='pricingrule',
            index=models.Index(fields=['active'], name='handy_prici_active_0b4990_idx'),
        ),
        migrations.AddIndex(
            model_name='jobtracking',
            index=models.Index(fields=['booking', '-ts'], name='handy_jobtr_booking_183195_idx'),
        ),
    ]
